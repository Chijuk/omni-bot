
package ua.omniway.client.ot.soap.service;

import lombok.SneakyThrows;
import org.springframework.core.io.ClassPathResource;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 */
@WebServiceClient(name = "OTWebService", targetNamespace = "http://www.omninet.de/OtWebSvc/v1", wsdlLocation = "classpath:wsdl/ot.wsdl")
public class OTWebService extends Service {

    private static final WebServiceException OTWEBSERVICE_EXCEPTION;
    private static final QName OTWEBSERVICE_QNAME = new QName("http://www.omninet.de/OtWebSvc/v1", "OTWebService");

    static {
        OTWEBSERVICE_EXCEPTION = null;
    }

    public OTWebService() {
        super(getWsdlLocation(), OTWEBSERVICE_QNAME);
    }

    public OTWebService(WebServiceFeature... features) {
        super(getWsdlLocation(), OTWEBSERVICE_QNAME, features);
    }

    public OTWebService(URL wsdlLocation) {
        super(wsdlLocation, OTWEBSERVICE_QNAME);
    }

    public OTWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, OTWEBSERVICE_QNAME, features);
    }

    public OTWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OTWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns OTWebServiceSoap
     */
    @WebEndpoint(name = "OTWebServiceSoap")
    public OTWebServiceSoap getOTWebServiceSoap() {
        return super.getPort(new QName("http://www.omninet.de/OtWebSvc/v1", "OTWebServiceSoap"), OTWebServiceSoap.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns OTWebServiceSoap
     */
    @WebEndpoint(name = "OTWebServiceSoap")
    public OTWebServiceSoap getOTWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.omninet.de/OtWebSvc/v1", "OTWebServiceSoap"), OTWebServiceSoap.class, features);
    }

    /**
     * @return returns OTWebServiceSoap
     */
    @WebEndpoint(name = "OTWebServiceSoap12")
    public OTWebServiceSoap getOTWebServiceSoap12() {
        return super.getPort(new QName("http://www.omninet.de/OtWebSvc/v1", "OTWebServiceSoap12"), OTWebServiceSoap.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns OTWebServiceSoap
     */
    @WebEndpoint(name = "OTWebServiceSoap12")
    public OTWebServiceSoap getOTWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.omninet.de/OtWebSvc/v1", "OTWebServiceSoap12"), OTWebServiceSoap.class, features);
    }

    @SneakyThrows
    private static URL getWsdlLocation() {
        if (OTWEBSERVICE_EXCEPTION != null) {
            throw OTWEBSERVICE_EXCEPTION;
        }
        return new ClassPathResource("/wsdl/ot.wsdl").getURL();
    }
}
